#!/usr/bin/env bash

export EDITOR="emacs -nw -Q"

# Disable START/STOP signals.
# https://superuser.com/questions/124845/can-you-disable-the-ctrl-s-xoff-keystroke-in-putty
stty -ixon

# Turn off the bell in the terminal (https://tldp.org/HOWTO/Visual-Bell-8.html)
if [[ -n "${BASH_VERSINFO}"  ]]; then
  bind 'set bell-style visible'
fi

# Add directory for convenient (conventional?) place for user binaries
export PATH="${HOME}/.local/bin":$PATH

export TOOLS_HOME="${HOME}/.tools"

# asdf
#
# Install common plugins and versions:
# asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
# asdf install nodejs latest
# asdf global nodejs latest
# asdf plugin-add pnpm
# asdf install pnpm latest
# asdf global pnpm latest
if [[ -z "${ASDF_DIR}" && -d "$HOME/.asdf" ]]; then
    if [[ -f "$HOME/.asdf/asdf.sh"  ]]; then
        # Older version of asdf is bash based and set up by sourcing
        . "$HOME/.asdf/asdf.sh"
        if [[ -n "${BASH_VERSINFO}"  ]]; then
            . "$HOME/.asdf/completions/asdf.bash"
        fi
    else
        # Newer version of asdf just needs to have path setup and then
        # can be integrated with bash completions
        export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
        . <(asdf completion bash)
    fi
fi

# Helper to disable asdf for a tool in the current shell
#
# Example: asdf-disable python
function asdf-disable() {
    if [[ -n "$(which asdf)"  ]]; then
        . "$(dirname $(which asdf))/../asdf.sh"
        asdf shell "$1" system
    fi
}

# cargo and Rust
if [[ -d "$HOME/.cargo" ]]; then
    . "$HOME/.cargo/env"
fi

if [[ -x "$(command -v sccache)" ]]; then
    export RUSTC_WRAPPER="$(command -v sccache)"
fi

# clyde, A cross-platform package manager for prebuilt applications
# See available packages at https://github.com/agateau/clyde-store
if [[ -d "${HOME}/.cache/clyde" ]]; then
    . "${HOME}/.cache/clyde/scripts/activate.sh"
fi

if [[ -x "$(command -v fzf)" ]]; then
    eval "$(fzf --bash)"
    # Tools used with fzf (https://github.com/junegunn/fzf/wiki/Related-projects)
    # - https://github.com/ajeetdsouza/zoxide
    # - https://github.com/lebr0nli/GEP
fi

# git-subrepo
if [[ -d "${TOOLS_HOME}/pkgs/git-subrepo" ]]; then
  source "${TOOLS_HOME}/pkgs/git-subrepo/.rc"
fi

# zoxide / z - jump around
if [[ -x "$(command -v zoxide)" ]]; then
    eval "$(zoxide init bash)"
else
    if [[ -d "${TOOLS_HOME}/pkgs/z" ]]; then
        . "${TOOLS_HOME}/pkgs/z/z.sh"
    fi
fi

# pnpm
export PNPM_HOME="${HOME}/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# Qt
export QT_LOGGING_RULES="kwin_*.debug=true"

# Enable gpg-agent as the ssh-agent.
# This is needed when SSH_AUTH_SOCK is not set in service.
# For example it is not set in Arch linux https://gitlab.archlinux.org/archlinux/packaging/packages/gnupg/-/blob/main/gpg-agent-ssh.socket
# But it is set in Ubuntu via gpg-agent.gpg-agent-ssh.user.socket in the gpg-agent debian
# See https://wiki.archlinux.org/title/GnuPG#SSH_agent
#
# Note: use `ssh-add` to add private keys to the agent
#
# Also, update /etc/X11/Xsession.options and remove use-ssh-agent option as needed
if [[ -z "${SSH_AUTH_SOCK}" ]]; then
   unset SSH_AGENT_PID
   export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/gnupg/S.gpg-agent.ssh"
fi
